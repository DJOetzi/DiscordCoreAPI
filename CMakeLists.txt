cmake_minimum_required(VERSION 3.21.21)
project(DiscordCoreAPI-Bot)

add_compile_definitions(DiscordCoreAPI-Bot)

add_executable(DiscordCoreAPI-Bot ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp)

set(VCToolsRedistInstallDir "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.30.30705/bin/Hostx64/x64")

if (WIN32)
	set(OS_SUFFIX01 "lib")
	set(VcPkgFolder "C:/vcpkg/installed/x64-windows")
	set(OpenSSLFolder "C:/OpenSSL")
elseif(UNIX)
	set(OS_SUFFIX01 "a")
	set(VcPkgFolder "opt/vcpkg/installed/x64-windows")
	set(OpenSSLFolder "opt/OpenSSL")
endif()

if (WIN32)
	set(OS_SUFFIX02 "dll")
elseif(UNIX)
	set(OS_SUFFIX02 "a")
endif()

add_link_options(/LTCG)
add_compile_options(/sdl)
add_compile_options(/Gm-)
add_compile_options(/Zi )
add_compile_options(/ZW:nostdlib)
add_compile_options(/Zc:wchar_t)
add_compile_options(/Gy)
add_compile_options(/W3)
add_compile_options(/GL)
add_compile_options(/GS)
add_compile_options(/MP)
add_compile_options(/bigobj)
include_directories(${CMAKE_SOURCE_DIR}/Headers/)

target_compile_definitions(DiscordCoreAPI-Bot PRIVATE $<$<CONFIG:Release>:RELEASE_BUILD>)
target_compile_definitions(DiscordCoreAPI-Bot PRIVATE $<$<CONFIG:Debug>:DEBUG_BUILD>)

if (CMAKE_BUILD_TYPE STREQUAL "Release")
add_compile_options(/O2)
endif()
set_target_properties(DiscordCoreAPI-Bot PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/Output Files")

include_directories(${VcPkgFolder}/include)
include_directories(${VcPkgFolder}/lib/glib-2.0/include)
include_directories(${OpenSSLFolder}/include)

target_include_directories(DiscordCoreAPI-Bot PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/Headers/)

target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/libcurl.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/glib-2.0.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/libsodium.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/avutil.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/avcodec.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/swresample.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/avformat.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/opus.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${OpenSSLFolder}/libcrypto.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${OpenSSLFolder}/libssl.${OS_SUFFIX01})
set_property(TARGET DiscordCoreAPI-Bot PROPERTY CXX_STANDARD 23)
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
target_link_libraries(DiscordCoreAPI-Bot "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug/DiscordCoreAPI-DLL.${OS_SUFFIX01}")
file(COPY ${VcPkgFolder}/bin/zlib1.${OS_SUFFIX02} DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug")
file(COPY ${VcPkgFolder}/bin/libcurl.${OS_SUFFIX02} DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug")
file(COPY ${OpenSSLFolder}/libcrypto-3-x64.${OS_SUFFIX02} DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug")
file(COPY ${OpenSSLFolder}/libssl-3-x64.${OS_SUFFIX02} DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug")
SET(Msvcp140ToPath "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug/msvcp140_app.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy ${VCToolsRedistInstallDir}/msvcp140.${OS_SUFFIX02} ${Msvcp140ToPath})
SET(Msvcp140AtomicWaitToPath "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug/msvcp140_atomic_wait_app.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy ${VCToolsRedistInstallDir}/msvcp140_atomic_wait.${OS_SUFFIX02} ${Msvcp140AtomicWaitToPath})
SET(VCRuntime140ToPath "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug/vcruntime140_app.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy ${VCToolsRedistInstallDir}/vcruntime140.${OS_SUFFIX02} ${VCRuntime140ToPath})
SET(VCRuntime1401ToPath "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Debug/vcruntime140_1_app.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy ${VCToolsRedistInstallDir}/vcruntime140_1.${OS_SUFFIX02} ${VCRuntime1401ToPath})
else()
target_link_libraries(DiscordCoreAPI-Bot "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release/DiscordCoreAPI-DLL.${OS_SUFFIX01}")
file(COPY ${VcPkgFolder}/bin/libcurl.${OS_SUFFIX02} DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release")
file(COPY ${VcPkgFolder}/bin/zlib1.${OS_SUFFIX02} DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release")
file(COPY ${OpenSSLFolder}/libcrypto-3-x64.${OS_SUFFIX02} DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release")
file(COPY ${OpenSSLFolder}/libssl-3-x64.${OS_SUFFIX02} DESTINATION "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release")
SET(Msvcp140ToPath "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release/msvcp140_app.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy ${VCToolsRedistInstallDir}/msvcp140.${OS_SUFFIX02} ${Msvcp140ToPath})
SET(Msvcp140AtomicWaitToPath "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release/msvcp140_atomic_wait_app.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy ${VCToolsRedistInstallDir}/msvcp140_atomic_wait.${OS_SUFFIX02} ${Msvcp140AtomicWaitToPath})
SET(VCRuntime140ToPath "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release/vcruntime140_app.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy ${VCToolsRedistInstallDir}/vcruntime140.${OS_SUFFIX02} ${VCRuntime140ToPath})
SET(VCRuntime1401ToPath "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Release/vcruntime140_1_app.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy ${VCToolsRedistInstallDir}/vcruntime140_1.${OS_SUFFIX02} ${VCRuntime1401ToPath})
endif()

ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Certs/SoundCloudCert.pem" "C:/SSL/Certs/SoundCloudCert.pem")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Certs/GoogleCert.pem" "C:/SSL/Certs/GoogleCert.pem")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/Output Files/Certs/DiscordCert.pem" "C:/SSL/Certs/DiscordCert.pem")
