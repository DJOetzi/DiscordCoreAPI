if (WIN32)
	cmake_minimum_required(VERSION 3.21.2)
	set(OUTPUT_FOLDER01 "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release")
	set(OUTPUT_FOLDER02 "${CMAKE_SOURCE_DIR}/Output Files/Windows/")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${OUTPUT_FOLDER01}")
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${OUTPUT_FOLDER01}")
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${OUTPUT_FOLDER02}")
	set(CMAKE_CXX_STANDARD 23)
	set(CMAKE_CXX_STANDARD_REQUIRED True)
	project(DiscordCoreAPI-Bot VERSION 1.00 LANGUAGES CXX)
	set(OS_SUFFIX01 "lib")
	set(OS_SUFFIX02 "dll")
	set(OpenSSLFolder "C:/OpenSSL")
	set(VcPkgFolder "C:/vcpkg/installed/x64-windows")
	set(VCToolsRedistInstallDir "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.30.30705/bin/Hostx64/x64")
	set(VCToolsNonRedistInstallDir "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Redist/MSVC/14.30.30704/debug_nonredist/x64/Microsoft.VC143.DebugCRT")
	add_compile_definitions(_WIN32)
elseif(UNIX)
	cmake_minimum_required(VERSION 3.16.1)
	set(CMAKE_CXX_COMPILER "/usr/bin/g++-11")
	add_compile_options(-std=gnu++2b)
	set(OUTPUT_FOLDER01 "${CMAKE_SOURCE_DIR}/Output Files/Linux/Release")
	set(OUTPUT_FOLDER02 "${CMAKE_SOURCE_DIR}/Output Files/Linux/")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${OUTPUT_FOLDER01}")
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${OUTPUT_FOLDER01}")
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${OUTPUT_FOLDER02}")
	set(CMAKE_CXX_STANDARD 20)
	set(CMAKE_CXX_STANDARD_REQUIRED True)
	project(DiscordCoreAPI-Bot VERSION 1.00 LANGUAGES CXX)
	set(OS_SUFFIX01 "a")
	set(OS_SUFFIX02 "so")
	set(OpenSSLFolder "$ENV{HOME}/vcpkg/installed/x64-linux")
	set(VcPkgFolder "$ENV{HOME}/vcpkg/installed/x64-linux")
    set(VcPkgFolder02 "$ENV{HOME}/vcpkg/installed/x64-linux")
    set(CMAKE_CXX_COMPILER "/usr/bin/g++-11")
    set(OUTPUT_FOLDER ${CMAKE_SOURCE_DIR}/Output Files/Linux/Release)	
	add_compile_definitions(LINUX)
endif()

	add_executable(DiscordCoreAPI-Bot ${CMAKE_SOURCE_DIR}/main.cpp)
target_sources(DiscordCoreAPI-Bot PRIVATE ${CMAKE_SOURCE_DIR}/main.cpp)
if (WIN32)
target_link_libraries(DiscordCoreAPI-Bot "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/DiscordCoreAPI-DLL.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/DiscordCoreAPI-DLL.${OS_SUFFIX01}")
elseif (UNIX)
link_libraries(DiscordCoreAPI-Bot "${CMAKE_SOURCE_DIR}/Output Files/Linux/Release/DiscordCoreAPI-DLL.${OS_SUFFIX02}")
link_libraries(DiscordCoreAPI-Bot "${CMAKE_SOURCE_DIR}/Output Files/Linux/Debug/DiscordCoreAPI-DLL.${OS_SUFFIX02}")
endif()
add_link_options(/LTCG)
add_compile_options(-fcoroutines)
add_compile_options(/O2)
add_compile_options(/sdl)
add_compile_options(/Gm-)
add_compile_options(/Zi )
add_compile_options(/ZW:nostdlib)
add_compile_options(/Zc:wchar_t)
add_compile_options(/Gy)
add_compile_options(/W3)
add_compile_options(/GL)
add_compile_options(/GS)
add_compile_options(/MP)
add_compile_options(/bigobj)
include_directories("${CMAKE_SOURCE_DIR}/Headers")
include_directories("${VcPkgFolder}/include")
include_directories("${VcPkgFolder}/lib/glib-2.0/include")
include_directories("${VcPkgFolder}/include/cpp-base64/")
include_directories("${OpenSSLFolder}/include")
include_directories("$ENV{HOME}/vcpkg/installed/x64-linux/include/glib-2.0/")
if (WIN32)
target_link_libraries(DiscordCoreAPI-Bot ${OpenSSLFolder}/libcrypto.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${OpenSSLFolder}/libssl.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/libsodium.${OS_SUFFIX01})
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/glib-2.0.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/avutil.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/avcodec.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/swresample.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/avformat.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/opus.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libcurl.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/bin/zlib1.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/zlib1.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/bin/libcurl.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/libcurl.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/libcrypto-3-x64.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/libcrypto-3-x64.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/libssl-3-x64.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/libssl-3-x64.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/bin/zlib1.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/zlib1.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/bin/libcurl.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/libcurl.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/libcrypto-3-x64.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/libcrypto-3-x64.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/libssl-3-x64.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/libssl-3-x64.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsRedistInstallDir}/msvcp140.${OS_SUFFIX02}"  "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/msvcp140.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsRedistInstallDir}/msvcp140_atomic_wait.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/msvcp140_atomic_wait.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsRedistInstallDir}/vcruntime140.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/vcruntime140.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsRedistInstallDir}/vcruntime140_1.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Release/vcruntime140_1.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsNonRedistInstallDir}/msvcp140d.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/msvcp140D.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsNonRedistInstallDir}/msvcp140d_atomic_wait.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/msvcp140D_atomic_wait.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsNonRedistInstallDir}/vcruntime140d.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/vcruntime140D.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsNonRedistInstallDir}/vcruntime140_1d.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/Debug/vcruntime140_1D.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/Output Files/Certs/SoundCloudCert.pem" "C:/SSL/Certs/SoundCloudCert.pem")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/Output Files/Certs/GoogleCert.pem" "C:/SSL/Certs/GoogleCert.pem")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/Output Files/Certs/DiscordCert.pem" "C:/SSL/Certs/DiscordCert.pem")
elseif (UNIX)
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/ApplicationCommandEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/AudioDecoder.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/AudioEncoder.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/ChannelEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/CommandController.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/DataParsingFunctions.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/DiscordCoreClient.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/DiscordCoreClient.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/ErlPacker.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/EventManager.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/FoundationEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/GuildEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/GuildMemberEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/GuildScheduledEventEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/Http.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/InputEvents.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/InteractionEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/JSONIfier.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/MessageEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/Nanobench.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/ReactionEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/RoleEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/SongAPI.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/SoundCloudAPI.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/SSLClients.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/StageInstanceEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/StickerEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/ThreadEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/ThreadPool.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/UserEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/VoiceConnection.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/WebHookEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/WebSocketEntities.cpp")
target_sources(DiscordCoreAPI-Bot PRIVATE "${CMAKE_SOURCE_DIR}/Source/YouTubeAPI.cpp")
link_libraries(DiscordCoreAPI-Bot ${OpenSSLFolder}/libcrypto.${OS_SUFFIX01})
link_libraries(DiscordCoreAPI-Bot ${OpenSSLFolder}/libssl.${OS_SUFFIX01})
link_libraries(DiscordCoreAPI-Bot ${VcPkgFolder}/lib/libsodium.${OS_SUFFIX01})
link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libglib-2.0.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libavutil.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libavcodec.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libswresample.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libavformat.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libopus.${OS_SUFFIX01}")
add_library(DiscordCoreAPI_DLL STATIC IMPORTED GLOBAL)
set_property(TARGET DiscordCoreAPI_DLL PROPERTY IMPORTED_LOCATION "${CMAKE_SOURCE_DIR}/Output Files/Linux/Debug/DiscordCoreAPI-DLL.${OS_SUFFIX02}")
link_libraries(DiscordCoreAPI-Bot "${CMAKE_SOURCE_DIR}/Output Files/Linux/Release/DiscordCoreAPI-DLL.${OS_SUFFIX02}")
link_libraries(DiscordCoreAPI-Bot "${CMAKE_SOURCE_DIR}/Output Files/Linux/Debug/DiscordCoreAPI-DLL.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/lib/libz.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/Debug/libz.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/lib/libcurl.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/Debug/libcurl.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/lib/libcrypto.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/Debug/libcrypto.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/lib/libssl.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/Debug/libssl.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/lib/libz.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/Release/libz.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/lib/libcurl.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/Release/libcurl.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/lib/libcrypto.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/Release/libcrypto.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/lib/libssl.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/Release/libssl.${OS_SUFFIX01}")
endif()
