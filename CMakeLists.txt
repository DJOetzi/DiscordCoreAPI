if ($<CONFIG:RELEASE>)
set(CMAKE_BUILD_TYPE $<$<CONFIG:RELEASE>>"Release")
elseif($<CONFIG:DEBUG>)
set(CMAKE_BUILD_TYPE $<$<CONFIG:DEBUG>>"Debug")
else()
set(CMAKE_BUILD_TYPE "Release")
endif()
set(DISCORD_CORE_API_DLL_DIRECTORY "C:/Users/Chris/Source/Repos/DiscordCoreAPI-DLL/DiscordCoreAPI-DLL")
if (WIN32)
	cmake_minimum_required(VERSION 3.21.2)
	set(OUTPUT_FOLDER01 "${CMAKE_SOURCE_DIR}/Output Files/Windows/")
	set(OUTPUT_FOLDER02 "${CMAKE_SOURCE_DIR}/Output Files/Windows/")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${OUTPUT_FOLDER01}")
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${OUTPUT_FOLDER01}")
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${OUTPUT_FOLDER02}")
	set(CMAKE_CXX_STANDARD 23)
	set(CMAKE_CXX_STANDARD_REQUIRED True)
	project(DiscordCoreAPI-Bot VERSION 1.00 LANGUAGES CXX)
	set(OS_SUFFIX01 "lib")
	set(OS_SUFFIX02 "dll")
	set(OpenSSLFolder "C:/OpenSSL")
	set(VcPkgFolder "C:/vcpkg/installed/x64-windows")
	set(VCToolsRedistInstallDir "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.30.30705/bin/Hostx64/x64")
	set(VCToolsNonRedistInstallDir "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Redist/MSVC/14.30.30704/debug_nonredist/x64/Microsoft.VC143.DebugCRT")
	add_compile_definitions(_WIN32)
elseif(UNIX)
	set(CMAKE_TOOLCHAIN_FILE "$ENV{HOME}/vcpkg/scripts/buildsystems/vcpkg.cmake")
	cmake_minimum_required(VERSION 3.16.1)
	set(CMAKE_CXX_COMPILER "/usr/bin/g++-11")
	add_compile_options(-std=gnu++2b)
	add_compile_options(-lcrypto)
	add_compile_options(-lssl)
	set(OUTPUT_FOLDER01 "${CMAKE_SOURCE_DIR}/Output Files/Linux/")
	set(OUTPUT_FOLDER02 "${CMAKE_SOURCE_DIR}/Output Files/Linux/")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${OUTPUT_FOLDER01}")
	set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${OUTPUT_FOLDER01}")
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${OUTPUT_FOLDER02}")
	set(CMAKE_CXX_STANDARD 20)
	set(CMAKE_CXX_STANDARD_REQUIRED True)
	project(DiscordCoreAPI-Bot VERSION 1.00 LANGUAGES CXX)
	set(OS_SUFFIX01 "a")
	set(OS_SUFFIX02 "so")
	set(OpenSSLFolder "$ENV{HOME}/vcpkg/installed/x64-linux/lib")
	set(VcPkgFolder "$ENV{HOME}/vcpkg/installed/x64-linux")
    set(VcPkgFolder02 "$ENV{HOME}/vcpkg/installed/x64-linux")
    set(CMAKE_CXX_COMPILER "/usr/bin/g++-11")
    set(OUTPUT_FOLDER ${CMAKE_SOURCE_DIR}/Output Files/Linux/Release)	
	add_compile_definitions(LINUX)
endif()

if (WIN32)
if (CMAKE_BUILD_TYPE STREQUAL "Release")
	include(${DISCORD_CORE_API_DLL_DIRECTORY}/DiscordCoreAPI-DLLTargetsRelease.cmake)
else()
	include(${DISCORD_CORE_API_DLL_DIRECTORY}/DiscordCoreAPI-DLLTargetsDebug.cmake)
endif()
	add_executable(DiscordCoreAPI-Bot main.cpp)
	target_link_libraries(DiscordCoreAPI-Bot DiscordCoreAPI-DLL)
elseif (UNIX)
if (CMAKE_BUILD_TYPE STREQUAL "Release")
	include(${DISCORD_CORE_API_DLL_DIRECTORY}/DiscordCoreAPI-DLLTargetsRelease.cmake)
else()
	include(${DISCORD_CORE_API_DLL_DIRECTORY}/DiscordCoreAPI-DLLTargetsDebug.cmake)
endif()
	add_executable(DiscordCoreAPI-Bot main.cpp)
	target_link_libraries(DiscordCoreAPI-Bot DiscordCoreAPI-DLL)
endif()
add_link_options(/LTCG)
add_compile_options(-fcoroutines)
add_compile_options(/O2)
add_compile_options(/sdl)
add_compile_options(/Gm-)
add_compile_options(/Zi )
add_compile_options(/ZW:nostdlib)
add_compile_options(/Zc:wchar_t)
add_compile_options(/Gy)
add_compile_options(/W3)
add_compile_options(/GL)
add_compile_options(/GS)
add_compile_options(/MP)
add_compile_options(/bigobj)
include_directories("${VcPkgFolder}/include")
include_directories("${VcPkgFolder}/lib/glib-2.0/include")
include_directories("${VcPkgFolder}/include/cpp-base64/")
include_directories("${OpenSSLFolder}/include")
include_directories("$ENV{HOME}/vcpkg/installed/x64-linux/include/glib-2.0/")
if (WIN32)
include_directories("${CMAKE_SOURCE_DIR}/Headers/Windows")
target_link_libraries(DiscordCoreAPI-Bot "${OpenSSLFolder}/libcrypto.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${OpenSSLFolder}/libssl.${OS_SUFFIX01}")
link_libraries("${OpenSSLFolder}/libcrypto-3-x64.${OS_SUFFIX02}")
link_libraries("${OpenSSLFolder}/libssl-3-x64.${OS_SUFFIX02}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libsodium.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/glib-2.0.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/avutil.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/avcodec.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/swresample.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/avformat.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/opus.${OS_SUFFIX01}")
target_link_libraries(DiscordCoreAPI-Bot "${VcPkgFolder}/lib/libcurl.${OS_SUFFIX01}")
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsRedistInstallDir}/msvcp140d_atomic_wait.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/${CMAKE_BUILD_TYPE}/msvcp140d_atomic_wait.${OS_SUFFIX02}")
endif()
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/libcrypto-3-x64.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/${CMAKE_BUILD_TYPE}/libcrypto-3-x64.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/libssl-3-x64.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/${CMAKE_BUILD_TYPE}/libssl-3-x64.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VCToolsRedistInstallDir}/msvcp140_atomic_wait.${OS_SUFFIX02}" "${CMAKE_SOURCE_DIR}/Output Files/Windows/${CMAKE_BUILD_TYPE}/msvcp140_atomic_wait.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/Output Files/Certs/SoundCloudCert.pem" "C:/SSL/Certs/SoundCloudCert.pem")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/Output Files/Certs/GoogleCert.pem" "C:/SSL/Certs/GoogleCert.pem")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/Output Files/Certs/DiscordCert.pem" "C:/SSL/Certs/DiscordCert.pem")
elseif (UNIX)
add_compile_options("-DCMAKE_TOOLCHAIN_FILE=$ENV{HOME}/vcpkg/scripts/buildsystems/vcpkg.cmake")
include_directories("${CMAKE_SOURCE_DIR}/Headers/Linux")
include_directories("/usr/include/x86_64-linux-gnu/")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libssl.so.1.1.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libsodium.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libglib-2.0.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libavutil.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libavcodec.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libswresample.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libavformat.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libopus.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "/usr/lib/x86_64-linux-gnu/libavutil.${OS_SUFFIX01}")
link_libraries(DiscordCoreAPI-Bot "${CMAKE_SOURCE_DIR}/Output Files/Linux/${CMAKE_BUILD_TYPE}/libDiscordCoreAPI-DLL.${OS_SUFFIX02}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/lib/libz.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/${CMAKE_BUILD_TYPE}/libz.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${VcPkgFolder}/lib/libcurl.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/${CMAKE_BUILD_TYPE}/libcurl.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/lib/libcrypto.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/${CMAKE_BUILD_TYPE}/libcrypto.${OS_SUFFIX01}")
ADD_CUSTOM_COMMAND(TARGET DiscordCoreAPI-Bot COMMAND POST_BUILD ${CMAKE_COMMAND} -E copy "${OpenSSLFolder}/lib/libssl.${OS_SUFFIX01}" "${CMAKE_SOURCE_DIR}/Output Files/Linux/${CMAKE_BUILD_TYPE}/libssl.${OS_SUFFIX01}")
endif()
